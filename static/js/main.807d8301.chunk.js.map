{"version":3,"sources":["components/Navebar.js","components/TextForm.js","components/Popup.js","App.js","reportWebVitals.js","index.js"],"names":["Navebar","props","className","href","title","id","home","role","onClick","toggleMode","type","forhtml","TextForm","useState","text","setText","style","color","mode","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","proptype","PropTypes","string","defaultProps","Popup","class","Alert","act","App","setmode","alert","setAlert","document","body","backgroundColor","action","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.807d8301.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navebar(props) {\r\n \r\n    return (\r\n      <>\r\n            <nav className={'navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}'}>\r\n           <div className=\"container-fluid\">\r\n             <a className=\"navbar-brand\" href=\"#\"><b>{props.title}</b></a>\r\n            {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n               <span className=\"navbar-toggler-icon\"></span>\r\n             </button>*/}\r\n             <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n               <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                 <li className=\"nav-item\">\r\n                   <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.home}</a>\r\n                   {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.home}</Link>*/}\r\n                 </li>\r\n                 <li className=\"nav-item\">\r\n                   <a className=\"nav-link\" href=\"#\">link</a>\r\n                  {/* <Link className=\"nav-link\" to=\"/\">link</Link>*/}\r\n                 </li>\r\n                 <li className=\"nav-item dropdown\">\r\n                   <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                     Dropdown\r\n                   </a>\r\n                   <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                     <li><a className=\"dropdown-item\" href=\"#\">About</a></li>\r\n                     <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n                   </ul>\r\n                 </li>\r\n               </ul>\r\n               {/*<form className=\"d-flex\">\r\n                 <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                 <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n               </form>*/}\r\n               <div className={'form-check form-switch text-${props.mode}'}>   {/*text-${props.mode==='light'?'dark':'light'*/}\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" forhtml=\"flexSwitchCheckDefault\">Enable gray mode</label>\r\n                </div>\r\n             </div>\r\n           </div>\r\n         </nav>\r\n      </>\r\n    )\r\n}\r\n//Props\r\n//if we are pass the numarical vaule in component then the are show the error\r\n//isRequred prope (\"we are use title: PropTypes.string.isRequired\")\r\nNavebar.proptype = {\r\n    title : PropTypes.string,\r\n    home : PropTypes.string\r\n}\r\nNavebar.defaultProps = {\r\n    title: \"set title here(component)\",\r\n    home : \"set somthing here\"\r\n};\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick= ()=>{\r\n        console.log(\"uppercase button is click\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"text updated in uppercase\");\r\n    }\r\n\r\n    const handleloClick= ()=>{\r\n        console.log(\"lowercase button is click\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"text updated in lowercase\");\r\n    }\r\n    const handleclearClick= ()=>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"text is clear\");\r\n    }\r\n\r\n    const handleOnChange= (event)=>{\r\n        console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text ,setText] = useState(\"enter the text\");\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='light'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange}id=\"mytext\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>convert to uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleloClick}>convert to lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleclearClick}>clear text</button>\r\n        </div>\r\n        <div className=\"container my-2\" style={{color:props.mode==='light'?'white':'black'}}>\r\n            <h1>Your text summery</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.08 * text.split(\" \").length}sec time to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something here to proview it\"}</p>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Popup(props) {\r\n    return (\r\n        <>\r\n        <div>\r\n           <div class=\"alert alert-warning alert-dismissible fade show\"  role=\"alert\">\r\n            <strong>{props.Alert.act}</strong> \r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n","//import logo from './logo.svg';\nimport './App.css';\nimport Navebar from './components/Navebar';\nimport TextForm from './components/TextForm';\n//import About from './components/About';\nimport React, { useState } from 'react';\nimport Popup from './components/Popup';\n//import {\n//  BrowserRouter as Router,\n // Switch,\n // Route,\n  //Link\n//}from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light'); //whether dark mode enable or not\n  const [alert, setAlert] = useState(\"text is not updated\");\n\n  const showAlert = (action)=>{\n       setAlert({\n         act:action\n       });\n   }\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor='gray';\n      document.title = 'gray mode enable';\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      document.title = 'code jstar';\n    }\n  }\n  return(\n <>\n{/* <Router> */}      \n<Navebar title=\"jstarCoder\" home=\"Home\" mode={mode} toggleMode={toggleMode}/>\n<Popup Alert={alert}/>\n<div className=\"container my-3\">\n  {/*<Switch>*/}\n    {/*<Route exact path=\"/about\">\n    <About/>\n    </Route>\n  <Route exact path=\"/\">*/}\n    <TextForm showAlert={showAlert} heading=\"adding the text here\"/>\n   {/*</Route>*/}\n  {/*</Switch>*/} \n</div>\n{/*</Router>*/}\n\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}